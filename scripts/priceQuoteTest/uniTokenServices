require("dotenv").config();

const { Token : UniToken, CurrencyAmount } = require('@uniswap/sdk-core')
const ERC20ABI = require('./abi.json')
const JSBI  = require('jsbi') // jsbi@3.2.5

require('dotenv').config()
const CHAIN_ID = parseInt(process.env.GORELI_CHAIN_ID)

const chainId = parseInt(CHAIN_ID)
const { Token } = require('@uniswap/sdk-core')

class UniTokenServices {
    constructor(ethers, chainId, provider) {
        this.ethers   = ethers;
        this.chainId  = chainId;
        this.provider = provider;
    }

    getUniTokenByAddress = async (_tokenAddress) => {
        console.log("======================= getUniTokenByAddress(",_tokenAddress,") ======================");
        let contract = this.getERC20Contract(_tokenAddress);
        return await this.getUniTokenByContract(contract, _tokenAddress);
    }

    getUniTokenByContract = async (contract, _tokenAddress) => {
        let decimals = await contract.decimals();
        let symbol = await contract.symbol();
        let name = await contract.name();

        const uniToken = new Token(this.chainId, _tokenAddress, decimals, symbol, name)
        return uniToken;
    }

    dumpTokenDetailsByAddress = async (_tokenAddress) => {
        let contract = this.getERC20Contract(_tokenAddress);
        console.log("Token Details @ address: (", _tokenAddress, ")")
        await this.dumpTokenDetailsByContract(contract);
    }

    dumpTokenDetailsByContract = async (_contract) => {
        let decimals           = await _contract.decimals();
        let symbol             = await _contract.symbol();
        let name               = await _contract.name();
        // let balanceOf          = await _contract.balanceOf();
        let totalSupply        = await _contract.totalSupply();

        console.log("name       :              ", name)
        console.log("symbol     :              ", symbol)
        console.log("decimals   :              ", decimals)
        console.log("===============================================================================")
        // console.log("balanceOf  :              ", balanceOf)
        // console.log("totalSupply:              ", totalSupply)
    }


    getERC20Contract = (_tokenAddress) => {
        return new this.ethers.Contract(_tokenAddress, ERC20ABI, this.provider);
    }

    tokenToCurrencyInWei = (tokenAmount, uniToken) => {
        let wei = this.ethers.utils.parseUnits(tokenAmount.toString(), 18)
        return CurrencyAmount.fromRawAmount(uniToken, JSBI.BigInt(wei))
    }
}

module.exports = {
    UniTokenServices
}